MongoDB – EJ2
1. En sample_training.companies, ¿cuántas empresas tienen
más empleados que el año en el que se fundaron? (sol. 324)

Consulta: db.companies.find({$expr: {$gt: ["$number_of_employees", "$founded_year"]} }).count()

2. En sample_training.companies, ¿en cuántas empresas
coinciden su permalink con su twitter_username? (sol.
1299)

Consulta: db.companies.find({$expr: {$eq: ["$permalink", "$twitter_username"]} }).count()

3. En sample_airbnb.listingsAndReviews, ¿cuál es el nombre
del alojamiento en el que pueden estar más de 6 personas
alojadas y tiene exactamente 50 reviews? (sol. Sunset Beach
Lodge Retreat)

Consulta: db.listingsAndReviews.find({$and:[{"accommodates":{$gt: 6}}, {"number_of_reviews": 50}]},{"name":1, "_id":0})

4. En sample_airbnb.listingsAndReviews, ¿cuántos
documentos tienen el "property_type" "House" e incluyen
"Changing table" como una de las "amenities"? (sol. 11)

Consulta: db.listingsAndReviews.find({$and : [{"property_type": "House"},{"amenities":{$elemMatch:{$eq:"Changing table"}}}]}).count()


5. En sample_training.companies, ¿Cuántas empresas tienen
oficinas en Seattle? (sol. 117)

db.companies.find({"offices.city": "Seattle"}).count()


6. En sample_training.companies, haga una query que
devuelva únicamente el nombre de las empresas que tengan
exactamente 8 "funding_rounds"

Consulta:  db.companies.find({"funding_rounds":{"$size":8}},{"name":1,"_id":0})


7. En sample_training.trips, ¿cuántos viajes empiezan en
estaciones que están al oeste de la longitud -74? (sol. 1928)
Nota 1: Hacia el oeste la longitud decrece
Nota 2: el formato es <field_name>: [ <longitud>, <latitud> ]

Consulta: db.trips.find({"start station location.coordinates.0": {$lt:-74}}).count()

8. En sample_training.inspections, ¿cuántas inspecciones se
llevaron a cabo en la ciudad de "NEW YORK"? (sol. 18279)

Consulta: db.inspections.find({"address.city":"NEW YORK"}).count()

9. En sample_airbnb.listingsAndReviews, haga una query que
devuelva el nombre y la dirección de los alojamientos que
tengan "Internet" como primer elemento de "amenities"

db.listingsAndReviews.find({"amenities.0": "Internet"}).count()